{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "cli": {
    "packageManager": "pnpm"
  },
  "namedInputs": {
    "ts-source": [
      "{workspaceRoot}/tsconfig.build.json",
      "{projectRoot}/package.json",
      "{projectRoot}/tsconfig.json",
      "{projectRoot}/.swcrc",
      "{projectRoot}/.pnpm-lock",
      "{projectRoot}/src/**/*.(c|m)?tsx?",
      "{projectRoot}/src/**/*.json",
      "{projectRoot}/src/tests"
    ],
    "ts-output": [
      "{projectRoot}/package.json",
      "{projectRoot}/dist/**/*.(c|m)?js",
      "{projectRoot}/dist/**/*.d.(c|m)?ts",
      "{projectRoot}/(dist|src)/**/*.json",
      "!{projectRoot}/(dist|src)/tests"
    ]
  },
  "targetDefaults": {
    "biome": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "biome format ."
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "configurations": {
        "fix": {
          "commands": [
            "biome format --write ."
          ]
        }
      },
      "dependsOn": [
        "analyze:_"
      ],
      "cache": false,
      "inputs": [
        "{projectRoot}/*.json",
        "{projectRoot}/*.(c|m)?js",
        "{projectRoot}/src/**/*.(c|m)?tsx?",
        "{projectRoot}/src/**/*.json"
      ],
      "outputs": [
        "{projectRoot}/*.json",
        "{projectRoot}/*.(c|m)?js",
        "{projectRoot}/src/**/*.(c|m)?tsx?",
        "{projectRoot}/src/**/*.json"
      ]
    },
    "eslint": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "eslint . --cache --cache-strategy content --color"
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "configurations": {
        "fix": {
          "fix": true
        }
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [],
      "dependsOn": [
        "analyze:format"
      ]
    },
    "barrelify": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "barrel"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "dependsOn": [
        "build:_"
      ],
      "cache": true,
      "inputs": [
        "{projectRoot}/**/index.(c|m)?ts"
      ],
      "outputs": [
        "{projectRoot}/**/index.(c|m)?ts"
      ]
    },
    "delete-dist": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "rm -rf ./dist"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "dependsOn": [
        "build:_"
      ]
    },
    "populate-static": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "cp ./.swcrc.jsonc {projectRoot}/.swcrc"
        ],
        "parallel": true,
        "color": true
      },
      "dependsOn": [
        "build:_"
      ]
    },
    "update-ts-references": {
      "executor": "nx-update-ts-references:update-ts-references",
      "cache": true,
      "inputs": [
        "{projectRoot}/package.json",
        "{projectRoot}/tsconfig.json"
      ],
      "outputs": [
        "{projectRoot}/tsconfig.json"
      ],
      "dependsOn": [
        "build:_"
      ]
    },
    "npm-update-ts-references": {
      "executor": "npm-nx-update-ts-references:update-ts-references",
      "cache": true,
      "inputs": [
        "{projectRoot}/package.json",
        "{projectRoot}/tsconfig.json"
      ],
      "outputs": [
        "{projectRoot}/tsconfig.json"
      ],
      "dependsOn": [
        "build:_"
      ]
    },
    "tsc": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "swc ./src -d ./dist --copy-files --config-file .swcrc --strip-leading-paths --only '**/*.ts?(x)'",
          "swc ./src -d ./dist --config-file .swcrc --strip-leading-paths --only '**/*.mts?(x)' --out-file-extension mjs",
          "swc ./src -d ./dist --config-file .swcrc --strip-leading-paths -C module.type=commonjs -C module.ignoreDynamic=true -C module.exportInteropAnnotation=true --only '**/*.cts?(x)' --out-file-extension cjs",
          "tsc"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ],
      "dependsOn": [
        "build:pre"
      ]
    },
    "populate-files": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "load-populate-files --filePath ./dist/file-content.js"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "dependsOn": [
        "build:run"
      ]
    },
    "coverage-reset": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "rm -rf ./coverage"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "outputs": [
        "{projectRoot}/coverage"
      ],
      "dependsOn": [
        "test:_"
      ]
    },
    "mocha-unit-test": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "c8 --clean=false --reporter=none mocha --recursive './dist/tests/unit/**/*.spec.*js'"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [
        "{projectRoot}/coverage/tmp"
      ],
      "dependsOn": [
        "test:reset"
      ]
    },
    "mocha-integration-test": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "c8 ---clean=false --reporter=none mocha --recursive './dist/tests/integration/**/*.spec.*js'"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [
        "{projectRoot}/coverage/tmp"
      ],
      "dependsOn": [
        "mocha-unit-test",
        "test:reset"
      ]
    },
    "coverage-report": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "c8 report --all --check-coverage"
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "{projectRoot}/coverage"
      ],
      "dependsOn": [
        "test:run"
      ]
    },
    "pnpm-dedicated-lockfile": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "pnpm-dedicated-lockfile --lockfileName=.pnpm-lock-hash --hash --no-ci"
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "{workspaceRoot}/pnpm-lock.yaml"
      ],
      "outputs": [
        "{projectRoot}/.pnpm-lock"
      ],
      "dependsOn": [
        "install:_"
      ]
    },
    "npm-pnpm-dedicated-lockfile": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "npm-pnpm-dedicated-lockfile --lockfileName=.pnpm-lock-hash --hash --no-ci"
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "{workspaceRoot}/pnpm-lock.yaml"
      ],
      "outputs": [
        "{projectRoot}/.pnpm-lock"
      ],
      "dependsOn": [
        "install:_"
      ]
    },
    "analyze:_": {
      "executor": "nx:noop",
      "dependsOn": [
        "^build",
        "install"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "analyze:format": {
      "executor": "nx:noop",
      "dependsOn": [
        "analyze:_",
        "biome"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "analyze:lint": {
      "executor": "nx:noop",
      "dependsOn": [
        "analyze:format",
        "eslint"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "analyze": {
      "executor": "nx:noop",
      "dependsOn": [
        "analyze:lint"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build:_": {
      "executor": "nx:noop",
      "dependsOn": [
        "^build",
        "analyze",
        "install"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build:pre": {
      "executor": "nx:noop",
      "dependsOn": [
        "build:_",
        "barrelify",
        "delete-dist",
        "populate-static",
        "update-ts-references",
        "npm-update-ts-references"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build:run": {
      "executor": "nx:noop",
      "dependsOn": [
        "build:pre",
        "tsc"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build:post": {
      "executor": "nx:noop",
      "dependsOn": [
        "build:run",
        "populate-files"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build": {
      "executor": "nx:noop",
      "dependsOn": [
        "build:post"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "install:_": {
      "executor": "nx:noop",
      "dependsOn": [
        "^build"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "install": {
      "executor": "nx:noop",
      "dependsOn": [
        "install:_",
        "pnpm-dedicated-lockfile",
        "npm-pnpm-dedicated-lockfile"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test:_": {
      "executor": "nx:noop",
      "dependsOn": [
        "^test",
        "analyze",
        "build",
        "install"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test:reset": {
      "executor": "nx:noop",
      "dependsOn": [
        "test:_",
        "coverage-reset"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test:run": {
      "executor": "nx:noop",
      "dependsOn": [
        "test:reset",
        "mocha-unit-test",
        "mocha-integration-test"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test:report": {
      "executor": "nx:noop",
      "dependsOn": [
        "test:run",
        "coverage-report"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test": {
      "executor": "nx:noop",
      "dependsOn": [
        "test:report"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    }
  }
}
