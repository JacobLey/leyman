{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "cli": {
    "packageManager": "pnpm"
  },
  "namedInputs": {
    "ts-source": [
      "{workspaceRoot}/tsconfig.build.json",
      "{projectRoot}/package.json",
      "{projectRoot}/tsconfig.json",
      "{projectRoot}/.pnpm-lock",
      "{projectRoot}/src/**/*.(c|m)?tsx?",
      "{projectRoot}/src/**/*.json",
      "{projectRoot}/src/tests"
    ],
    "ts-output": [
      "{projectRoot}/package.json",
      "{projectRoot}/dist/**/*.(c|m)?js",
      "{projectRoot}/dist/**/*.d.(c|m)?ts",
      "{projectRoot}/(dist|src)/**/*.json",
      "!{projectRoot}/(dist|src)/tests"
    ]
  },
  "targetDefaults": {
    "biome": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "biome format ."
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "configurations": {
        "fix": {
          "commands": [
            "biome format --write ."
          ]
        }
      },
      "dependsOn": [
        "analyze:_"
      ],
      "cache": false,
      "inputs": [
        "{projectRoot}/*.json",
        "{projectRoot}/*.(c|m)?js",
        "{projectRoot}/src/**/*.(c|m)?tsx?",
        "{projectRoot}/src/**/*.json"
      ],
      "outputs": [
        "{projectRoot}/*.json",
        "{projectRoot}/*.(c|m)?js",
        "{projectRoot}/src/**/*.(c|m)?tsx?",
        "{projectRoot}/src/**/*.json"
      ]
    },
    "eslint": {
      "executor": "@nx/eslint:lint",
      "options": {
        "lintFilePatterns": [
          "{projectRoot}/src/**/*.{c,m,}ts{x,}",
          "{projectRoot}/*.{c,m,}js"
        ],
        "cache": true,
        "cacheLocation": "{projectRoot}/.eslintcache",
        "cacheStrategy": "content",
        "hasTypeAwareRules": true
      },
      "configurations": {
        "fix": {
          "fix": true
        }
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [],
      "dependsOn": [
        "analyze:format"
      ]
    },
    "barrelify": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "barrel"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "dependsOn": [
        "build:_"
      ],
      "cache": true,
      "inputs": [
        "{projectRoot}/**/index.(c|m)?ts"
      ],
      "outputs": [
        "{projectRoot}/**/index.(c|m)?ts"
      ]
    },
    "update-ts-references": {
      "executor": "nx-update-ts-references:update-ts-references",
      "cache": true,
      "inputs": [
        "{projectRoot}/package.json",
        "{projectRoot}/tsconfig.json"
      ],
      "outputs": [
        "{projectRoot}/tsconfig.json"
      ],
      "dependsOn": [
        "build:_"
      ]
    },
    "npm-update-ts-references": {
      "executor": "npm-nx-update-ts-references:update-ts-references",
      "cache": true,
      "inputs": [
        "{projectRoot}/package.json",
        "{projectRoot}/tsconfig.json"
      ],
      "outputs": [
        "{projectRoot}/tsconfig.json"
      ],
      "dependsOn": [
        "build:_"
      ]
    },
    "tsc": {
      "executor": "nx-tsc:build",
      "options": {
        "tsConfig": "{projectRoot}/tsconfig.json"
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ],
      "dependsOn": [
        "build:pre"
      ]
    },
    "npm-tsc": {
      "executor": "npm-nx-tsc:build",
      "options": {
        "tsConfig": "{projectRoot}/tsconfig.json"
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ],
      "dependsOn": [
        "build:pre"
      ]
    },
    "populate-files": {
      "executor": "nx-populate-files:populate-files",
      "options": {
        "filePath": "{projectRoot}/dist/file-content.js",
        "cwd": "{projectRoot}"
      },
      "dependsOn": [
        "build:run"
      ]
    },
    "npm-populate-files": {
      "executor": "npm-nx-populate-files:populate-files",
      "options": {
        "filePath": "{projectRoot}/dist/file-content.js",
        "cwd": "{projectRoot}"
      },
      "dependsOn": [
        "build:run"
      ]
    },
    "coverage-reset": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "rm -rf ./coverage"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "outputs": [
        "{projectRoot}/coverage"
      ],
      "dependsOn": [
        "test:_"
      ]
    },
    "mocha-unit-test": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "c8 --clean=false --reporter=none mocha --recursive './dist/tests/unit/**/*.spec.*js'"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [
        "{projectRoot}/coverage/tmp"
      ],
      "dependsOn": [
        "test:reset"
      ]
    },
    "mocha-integration-test": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "c8 ---clean=false -reporter=none mocha --recursive './dist/tests/integration/**/*.spec.*js'"
        ],
        "parallel": true,
        "color": true,
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "ts-source",
        "^ts-output"
      ],
      "outputs": [
        "{projectRoot}/coverage/tmp"
      ],
      "dependsOn": [
        "mocha-unit-test",
        "test:reset"
      ]
    },
    "coverage-report": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "c8 report --all --check-coverage"
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "inputs": [
        "{projectRoot}/coverage"
      ],
      "dependsOn": [
        "test:run"
      ]
    },
    "pnpm-dedicated-lockfile": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "pnpm-dedicated-lockfile --omitHash --lockfileName=.pnpm-lock"
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "dependsOn": []
    },
    "npm-pnpm-dedicated-lockfile": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "npm-pnpm-dedicated-lockfile --omitHash --lockfileName=.pnpm-lock"
        ],
        "color": true,
        "cwd": "{projectRoot}"
      },
      "dependsOn": []
    },
    "analyze:_": {
      "executor": "nx:noop",
      "dependsOn": [
        "^build"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "analyze:format": {
      "executor": "nx:noop",
      "dependsOn": [
        "analyze:_",
        "biome"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "analyze:lint": {
      "executor": "nx:noop",
      "dependsOn": [
        "analyze:format",
        "eslint"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "analyze": {
      "executor": "nx:noop",
      "dependsOn": [
        "analyze:lint"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build:_": {
      "executor": "nx:noop",
      "dependsOn": [
        "^build",
        "analyze"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build:pre": {
      "executor": "nx:noop",
      "dependsOn": [
        "build:_",
        "barrelify",
        "update-ts-references",
        "npm-update-ts-references"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build:run": {
      "executor": "nx:noop",
      "dependsOn": [
        "build:pre",
        "tsc",
        "npm-tsc"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build:post": {
      "executor": "nx:noop",
      "dependsOn": [
        "build:run",
        "populate-files",
        "npm-populate-files"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "build": {
      "executor": "nx:noop",
      "dependsOn": [
        "build:post"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test:_": {
      "executor": "nx:noop",
      "dependsOn": [
        "^test",
        "analyze",
        "build"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test:reset": {
      "executor": "nx:noop",
      "dependsOn": [
        "test:_",
        "coverage-reset"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test:run": {
      "executor": "nx:noop",
      "dependsOn": [
        "test:reset",
        "mocha-unit-test",
        "mocha-integration-test"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test:report": {
      "executor": "nx:noop",
      "dependsOn": [
        "test:run",
        "coverage-report"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    },
    "test": {
      "executor": "nx:noop",
      "dependsOn": [
        "test:report"
      ],
      "configurations": {
        "__lifecycle": {}
      }
    }
  },
  "tasksRunnerOptions": {
    "default": {
      "runner": "nx/tasks-runners/default"
    }
  }
}
